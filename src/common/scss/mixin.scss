//混合宏，在开发中可以直接这样使用：@include font-dpr(16px);
@mixin font-dpr($font-size){
    font-size: $font-size;

    [data-dpr="2"] & {
        font-size: $font-size * 2;
    }

    [data-dpr="3"] & {
        font-size: $font-size * 3;
    }
}

//px换上成rem
@mixin px2rem($property,$px-values,$baseline-px:75px,$support-for-ie:false){
    //Conver the baseline into rems
    // $baseline-rem: $baseline-px / 1rem * 1;
    // @debug  #{$baseline-rem};
    //Print the first line in pixel values
    @if $support-for-ie {
        #{$property}: $px-values;
    }
    //if there is only one (numeric) value, return the property/value line for it.
    @if type-of($px-values) == "number"{
        #{$property}: $px-values / $baseline-px * 1rem;
        @debug  #{$property};
    }
    @else {
        //Create an empty list that we can dump values into
        // example padding: 10px 20px;
        $rem-values:();
        @each $value in $px-values{
            // If the value is zero or not a number, return it
            @if type-of($value) == "number"{
                
                $rem-values: append($rem-values, $value / $baseline-px * 1rem);
            }
        }
        // Return the property and its list of converted values
        #{$property}: $rem-values;
    }
}

@mixin bg-image($url){
  background-image: url($url + "@2x.png");
  @media (-webkit-min-device-pixel-ratio: 3),(min-device-pixel-ratio: 3){
    background-image: url($url + "@3x.png");
  }
}